{"version":3,"sources":["context.js","components/test/Chuck.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/about.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContacts.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Chuck","_this2","fetch","then","response","json","joke","console","log","className","decodeURI","title","href","Contact","showContactInfo","onDeleteClick","delete","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","Link","to","marginRight","test_Chuck","Contacts","Fragment","contacts_Contact","Header","branding","defaultProps","about","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","Phone","post","history","push","_this$state2","layout_TextInputGroup","EditContacts","updContact","match","params","put","NotFound","Test","body","App","context_Provider","BrowserRouter","basename","process","layout_Header","Switch","Route","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d43d6f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Chuck extends Component {\r\n  state = {\r\n    type: \"\",\r\n    id: \"\",\r\n    value: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://api.icndb.com/jokes/random/\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          type: data.type,\r\n          id: data.value.id,\r\n          value: data.value.joke\r\n        })\r\n      );\r\n    console.log(this.state.type);\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <li className=\"list-group-item\">\r\n        Favorite Chuck Norris Joke:\r\n        <br /> {decodeURI(value)}{\" \"}\r\n        <cite title=\"Source Title\">\r\n          <a href=\"http://www.icndb.com\" className=\"badge badge-light\">\r\n            The Internet Chuck Norris Database\r\n          </a>\r\n        </cite>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chuck;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport Chuck from \"../test/Chuck\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                  <Chuck />\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function about() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to manage contacts.</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor={name}>{label}</label>\r\n    <input\r\n      type={type}\r\n      name={name}\r\n      className={classnames(\"form-control form-control-lg\", {\r\n        \"is-invalid\": error\r\n      })}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n    {error && <div className=\"invalid-feedback\">{error}</div>}\r\n  </div>\r\n);\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // validate feilds\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { Phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContacts extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // validate feilds\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { Phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContacts;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry that page does not exist.</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log(\"componentWillMount...\");\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log(\"componentDidUpdate...\");\r\n  // }\r\n\r\n  // UNSAFE_componentWillReceiveProps(nextProps, nextState) {\r\n  //   console.log(\"componetWillReceiveProps...\");\r\n  // }\r\n\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   return {\r\n  //     test: \"something\"\r\n  //   };\r\n  // }\r\n\r\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //   console.log(\"getSnapshotBeforeUpdate...\");\r\n  // }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/about\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContacts from \"./components/contacts/EditContacts\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport { Provider } from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route\n                  exact\n                  path=\"/contact/edit/:id\"\n                  component={EditContacts}\n                />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}